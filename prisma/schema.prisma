generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  machine     machine[]
}

model machine {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @db.VarChar(255)
  status         String           @db.VarChar(255)
  company_id     String?          @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  company        company?         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rental_request rental_request[]
}

model rental_request {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date   DateTime      @db.Date
  end_date     DateTime      @db.Date
  pickup_time  String        @db.VarChar(255)
  dropoff_time String        @db.VarChar(255)
  customer_id  String?       @db.Uuid
  machine_id   String?       @db.Uuid
  created_at   DateTime      @default(now()) @db.Timestamp(6)
  updated_at   DateTime      @default(now()) @db.Timestamp(6)
  user         user?         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  machine      machine?      @relation(fields: [machine_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rental_room  rental_room[]
}

model rental_room {
  id                String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String          @db.VarChar(255)
  rental_request_id String?         @db.Uuid
  created_at        DateTime        @default(now()) @db.Timestamp(6)
  updated_at        DateTime        @default(now()) @db.Timestamp(6)
  rental_request    rental_request? @relation(fields: [rental_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  company        company[]
  rental_request rental_request[]
}
